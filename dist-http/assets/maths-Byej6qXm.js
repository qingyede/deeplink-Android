var U=(t,r,n)=>new Promise((e,i)=>{var o=u=>{try{w(n.next(u))}catch(E){i(E)}},h=u=>{try{w(n.throw(u))}catch(E){i(E)}},w=u=>u.done?e(u.value):Promise.resolve(u.value).then(o,h);w((n=n.apply(t,r)).next())});const T="6.14.4";function C(t,r,n){const e=r.split("|").map(o=>o.trim());for(let o=0;o<e.length;o++)switch(r){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof t===r)return}const i=new Error(`invalid value for type ${r}`);throw i.code="INVALID_ARGUMENT",i.argument=`value.${n}`,i.value=t,i}function M(t){return U(this,null,function*(){const r=Object.keys(t);return(yield Promise.all(r.map(e=>Promise.resolve(t[e])))).reduce((e,i,o)=>(e[r[o]]=i,e),{})})}function m(t,r,n){for(let e in r){let i=r[e];const o=n?n[e]:null;o&&C(i,o,e),Object.defineProperty(t,e,{enumerable:!0,value:i,writable:!1})}}function a(t,r){if(t==null)return"null";if(r==null&&(r=new Set),typeof t=="object"){if(r.has(t))return"[Circular]";r.add(t)}if(Array.isArray(t))return"[ "+t.map(n=>a(n,r)).join(", ")+" ]";if(t instanceof Uint8Array){const n="0123456789abcdef";let e="0x";for(let i=0;i<t.length;i++)e+=n[t[i]>>4],e+=n[t[i]&15];return e}if(typeof t=="object"&&typeof t.toJSON=="function")return a(t.toJSON(),r);switch(typeof t){case"boolean":case"number":case"symbol":return t.toString();case"bigint":return BigInt(t).toString();case"string":return JSON.stringify(t);case"object":{const n=Object.keys(t);return n.sort(),"{ "+n.map(e=>`${a(e,r)}: ${a(t[e],r)}`).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function F(t,r){return t&&t.code===r}function $(t){return F(t,"CALL_EXCEPTION")}function O(t,r,n){let e=t;{const o=[];if(n){if("message"in n||"code"in n||"name"in n)throw new Error(`value will overwrite populated values: ${a(n)}`);for(const h in n){if(h==="shortMessage")continue;const w=n[h];o.push(h+"="+a(w))}}o.push(`code=${r}`),o.push(`version=${T}`),o.length&&(t+=" ("+o.join(", ")+")")}let i;switch(r){case"INVALID_ARGUMENT":i=new TypeError(t);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":i=new RangeError(t);break;default:i=new Error(t)}return m(i,{code:r}),n&&Object.assign(i,n),i.shortMessage==null&&m(i,{shortMessage:e}),i}function s(t,r,n,e){if(!t)throw O(r,n,e)}function c(t,r,n,e){s(t,r,"INVALID_ARGUMENT",{argument:n,value:e})}function j(t,r,n){n==null&&(n=""),n&&(n=": "+n),s(t>=r,"missing argument"+n,"MISSING_ARGUMENT",{count:t,expectedCount:r}),s(t<=r,"too many arguments"+n,"UNEXPECTED_ARGUMENT",{count:t,expectedCount:r})}const S=["NFD","NFC","NFKD","NFKC"].reduce((t,r)=>{try{if("test".normalize(r)!=="test")throw new Error("bad");if(r==="NFD"&&"é".normalize("NFD")!=="é")throw new Error("broken");t.push(r)}catch(n){}return t},[]);function D(t){s(S.indexOf(t)>=0,"platform missing String.prototype.normalize","UNSUPPORTED_OPERATION",{operation:"String.prototype.normalize",info:{form:t}})}function z(t,r,n){if(n==null&&(n=""),t!==r){let e=n,i="new";n&&(e+=".",i+=" "+n),s(!1,`private constructor; use ${e}from* methods`,"UNSUPPORTED_OPERATION",{operation:i})}}function x(t,r,n){if(t instanceof Uint8Array)return n?new Uint8Array(t):t;if(typeof t=="string"&&t.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)){const e=new Uint8Array((t.length-2)/2);let i=2;for(let o=0;o<e.length;o++)e[o]=parseInt(t.substring(i,i+2),16),i+=2;return e}c(!1,"invalid BytesLike value",r||"value",t)}function y(t,r){return x(t,r,!1)}function V(t,r){return x(t,r,!0)}function B(t,r){return!(typeof t!="string"||!t.match(/^0x[0-9A-Fa-f]*$/)||typeof r=="number"&&t.length!==2+2*r||r===!0&&t.length%2!==0)}function k(t){return B(t,!0)||t instanceof Uint8Array}const I="0123456789abcdef";function b(t){const r=y(t);let n="0x";for(let e=0;e<r.length;e++){const i=r[e];n+=I[(i&240)>>4]+I[i&15]}return n}function G(t){return"0x"+t.map(r=>b(r).substring(2)).join("")}function H(t){return B(t,!0)?(t.length-2)/2:y(t).length}function J(t,r,n){const e=y(t);return n!=null&&n>e.length&&s(!1,"cannot slice beyond data bounds","BUFFER_OVERRUN",{buffer:e,length:e.length,offset:n}),b(e.slice(r==null?0:r,n==null?e.length:n))}function R(t,r,n){const e=y(t);s(r>=e.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(e),length:r,offset:r+1});const i=new Uint8Array(r);return i.fill(0),n?i.set(e,r-e.length):i.set(e,0),b(i)}function X(t,r){return R(t,r,!0)}function K(t,r){return R(t,r,!1)}const p=BigInt(0),f=BigInt(1),l=9007199254740991;function q(t,r){const n=d(t,"value"),e=BigInt(g(r,"width"));if(s(n>>e===p,"overflow","NUMERIC_FAULT",{operation:"fromTwos",fault:"overflow",value:t}),n>>e-f){const i=(f<<e)-f;return-((~n&i)+f)}return n}function Q(t,r){let n=N(t,"value");const e=BigInt(g(r,"width")),i=f<<e-f;if(n<p){n=-n,s(n<=i,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:t});const o=(f<<e)-f;return(~n&o)+f}else s(n<i,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:t});return n}function W(t,r){const n=d(t,"value"),e=BigInt(g(r,"bits"));return n&(f<<e)-f}function N(t,r){switch(typeof t){case"bigint":return t;case"number":return c(Number.isInteger(t),"underflow",r||"value",t),c(t>=-l&&t<=l,"overflow",r||"value",t),BigInt(t);case"string":try{if(t==="")throw new Error("empty string");return t[0]==="-"&&t[1]!=="-"?-BigInt(t.substring(1)):BigInt(t)}catch(n){c(!1,`invalid BigNumberish string: ${n.message}`,r||"value",t)}}c(!1,"invalid BigNumberish value",r||"value",t)}function d(t,r){const n=N(t,r);return s(n>=p,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:t}),n}const A="0123456789abcdef";function P(t){if(t instanceof Uint8Array){let r="0x0";for(const n of t)r+=A[n>>4],r+=A[n&15];return BigInt(r)}return N(t)}function g(t,r){switch(typeof t){case"bigint":return c(t>=-l&&t<=l,"overflow",r||"value",t),Number(t);case"number":return c(Number.isInteger(t),"underflow",r||"value",t),c(t>=-l&&t<=l,"overflow",r||"value",t),t;case"string":try{if(t==="")throw new Error("empty string");return g(BigInt(t),r)}catch(n){c(!1,`invalid numeric string: ${n.message}`,r||"value",t)}}c(!1,"invalid numeric value",r||"value",t)}function Z(t){return g(P(t))}function Y(t,r){let e=d(t,"value").toString(16);if(r==null)e.length%2&&(e="0"+e);else{const i=g(r,"width");for(s(i*2>=e.length,`value exceeds width (${i} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:t});e.length<i*2;)e="0"+e}return"0x"+e}function L(t){const r=d(t,"value");if(r===p)return new Uint8Array([]);let n=r.toString(16);n.length%2&&(n="0"+n);const e=new Uint8Array(n.length/2);for(let i=0;i<e.length;i++){const o=i*2;e[i]=parseInt(n.substring(o,o+2),16)}return e}function v(t){let r=b(k(t)?t:L(t)).substring(2);for(;r.startsWith("0");)r=r.substring(1);return r===""&&(r="0"),"0x"+r}export{v as A,H as B,D as C,k as D,T as E,s as a,c as b,g as c,m as d,V as e,Z as f,y as g,b as h,G as i,L as j,N as k,J as l,O as m,z as n,Y as o,j as p,F as q,W as r,Q as s,P as t,q as u,B as v,X as w,$ as x,M as y,K as z};
